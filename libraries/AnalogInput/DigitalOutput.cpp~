#include "DigitalOutput.h"


DigitalOutput::DigitalOutput(int nbPort,int * portList){
	mNbPort=nbPort;
	mPortList=portList; 
	mTimeout=new long(nbPort);
	for(int  i=0;i<mNbPort;i++){
      pinMode(mPortList[i], OUTPUT);
      mTimeout[i]=0;
      digitalWrite(relais[i], HIGH);
     }
}

void DigitalOutput::writeRelais(String msg){
  
  int numRelais=0;
  Serial.print("writeRelais(const char msg[]:");
  Serial.println(msg);
  
  for(int i=0;i<msg.length() && numRelais<mNbPort;i++){
  /*  Serial.print(" msg[");
    Serial.print(i);
    Serial.print("]=");
    Serial.println(msg.charAt(i));*/
    if(msg.charAt(i)=='0'){
      Serial.print("Relais[");
      Serial.print(numRelais);
      Serial.println("]=0");
      
      digitalWrite(mPortList[numRelais],HIGH);
      numRelais++;
    }
   if(msg.charAt(i)=='1'){
      Serial.print("Relais[");
      Serial.print(numRelais);
      Serial.println("]=1");
      digitalWrite(relais[numRelais],LOW);
      mTimeout[numRelais]=millis()+TIME_OUT;
      numRelais++;
    }

  }
void DigitalOutput::relaisRefresh(){
   for(int  i=0;i<mNbPort;i++){
      if (mTimeout[i]<millis()&&mTimeout[i]!=0){
        digitalWrite(mPortList[i], HIGH);
        Serial.print("at : ");
        Serial.print(millis());
        Serial.print("  relais ");
        Serial.print(mPortList[i]);
        Serial.println(" LOW");
        mTimeout[i]=0;
      }
   } 
   DigitalOutput::~DigitalOutput(){
   	  if (mTimeout != null){
   	  	  delete mTimeout;
   	  }
	};
}

