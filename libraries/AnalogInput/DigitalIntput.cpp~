#include "DigitalInput.h"

#define NMEA_BLI_MSG "$PABLI,0,c,c,c,c,c,c,c,c*     "
//********************0123456789012345678901234567890
#define GROUP_OFFSET 7
#define VALUE_OFFSET 9
#define CHECKSUM_OFFSET 25
#define MSG_LENGTH_T_CHECKSUM 23

DigitalInput::DigitalInput(int nbPort,int * portList,int GroupNumber){
	mNbPort=nbPort;
	mPortList=portList;
	mGroupNumber=GroupNumber;
	boolean *mportState;
	mportState=malloc(nbPort*sizeof(mportState[0]));
	//mTimeout=new long(nbPort);
	for(int  i=0;i<mNbPort;i++){
      pinMode(mPortList[i], INPUT);
     
     }
}

void DigitalInput::getData(){
  
  mPortsValues=0;
  for(int numPort=0;numPort<mNbPort;numPort++){
  	mPortsValues=mPortsValues<<1;
  	mportState[numPort]=digitalRead(mPortList[numPort]);
	if(mportState[numPort]==true){		
		mPortsValues++;
    }    
  }
}

unsigned long DigitalInput::getValue(){
 	 getData();
	return mPortsValues;
}
String DigitalInput::toString(){ 
	String rep="";
	for(int numPort=0;numPort<mNbPort;numPort++){
		rep =rep + "port :"+ mPortList[numPort] + " : " + mportState[numPort] + "\n";
	}
	return rep;
}
String DigitalInput::toNmea(){
	  char msg[]=NMEA_BLI_MSG;
	  int pos=VALUE_OFFSET;
	  msg[GROUP_OFFSET]=char(mGroupNumber);
	 // strncpy(msg+GROUP_OFFSET,&char(mGroupNumber),1);
	  for(int numPort=0;numPort<mNbPort;numPort++){
	  	  if(mportState[numPort]==true){
	  	  	  msg[pos]='T';
	  	  }
	  	  else{
	  	  	 msg[pos]='F';
	  	  }
	  	  pos+=2;
	  }
	  checksum((unsigned char *) msg,msg+CHECKSUM_OFFSET,MSG_LENGTH_T_CHECKSUM);
	  return msg;
}